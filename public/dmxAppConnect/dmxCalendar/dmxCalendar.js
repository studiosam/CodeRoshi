/*!
 App Connect Calendar
 Version: 2.0.1
 (c) 2024 Wappler.io
 @build 2024-07-08 15:41:14
 */
dmx.Component("calendar",{initialData:{title:"",activeStart:null,activeEnd:null,currentStart:null,currentEnd:null},attributes:{timezone:{type:String,default:"local"},locale:{type:String,default:void 0},date:{type:String,default:void 0},height:{type:String,default:void 0},aspectRatio:{type:Number,default:1.35},view:{type:String,default:"dayGridMonth"},views:{type:String,default:""},theme:{type:String,default:"standard",enum:["standard","bootstrap","bootstrap5"]},hideNonCurrentDates:{type:Boolean,default:!1},selectable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},longPressDelay:{type:Number,default:1e3},noEventOverlap:{type:Boolean,default:!1},businessHours:{type:[Boolean,Object,Array],default:!1},eventOrder:{type:String,default:"start,-duration,allDay,title"},eventLimit:{type:Boolean,default:!1},nowIndicator:{type:Boolean,default:!1},viewsOptions:{type:Object,default:{}},eventConstraint:{type:[String,Object],default:null},selectConstraint:{type:[String,Object],default:null},googleCalendarApiKey:{type:String,default:""},bsTooltip:{type:Boolean,default:!1},bsTooltipPlacement:{type:String,default:'"top"'},bsTooltipTitle:{type:String,default:"event.extendedProps.description || event.title"},bsTooltipHtml:{type:String,default:"false"},config:{type:Object,default:{}}},methods:{gotoDate(e){this._calendar.gotoDate(e)},updateSize(){this._calendar.updateSize()},prev(){this._calendar.prev()},next(){this._calendar.next()},prevYear(){this._calendar.prevYear()},nextYear(){this._calendar.nextYear()},today(){this._calendar.today()}},events:{dateclick:MouseEvent,eventclick:MouseEvent,eventmouseenter:MouseEvent,eventmouseleave:MouseEvent,eventdrop:Event,eventresize:Event,select:Event},render(e){this._calendar=new FullCalendar.Calendar(e,{timeZone:this.props.timezone,locale:this.props.locale||navigator.language,initialDate:this.props.date,initialView:this.props.view,height:this.props.height,aspectRatio:this.props.aspectRatio,themeSystem:this.props.theme,showNonCurrentDates:!this.props.hideNonCurrentDates,selectable:this.props.selectable,editable:this.props.editable,longPressDelay:this.props.longPressDelay,eventOrder:this.props.eventOrder,eventOverlap:!this.props.noEventOverlap,eventConstraint:this.props.eventConstraint,selectConstraint:this.props.selectConstraint,businessHours:"string"==typeof this.props.businessHours?"false"!=this.props.businessHours:this.props.businessHours,dayMaxEventRows:this.props.eventLimit,nowIndicator:this.props.nowIndicator,googleCalendarApiKey:this.props.googleCalendarApiKey,views:this.props.viewsOptions,datesSet:this._datesSet.bind(this),dateClick:this._dateClick.bind(this),eventClick:this._eventClick.bind(this),eventMouseEnter:this._eventMouseEnter.bind(this),eventMouseLeave:this._eventMouseLeave.bind(this),eventDrop:this._eventDrop.bind(this),eventResize:this._eventResize.bind(this),eventDidMount:this._eventDidMount.bind(this),eventWillUnmount:this._eventWillUnmount.bind(this),select:this._select.bind(this),headerToolbar:{start:"today prev,next",center:"title",end:this.props.views.toString()},...this.props.config}),this.$parse(),e.innerHTML="",this._calendar.render()},performUpdate(e){this._calendar.batchRendering((()=>{e.has("date")&&this._calendar.gotoDate(this.props.date),e.has("view")&&this._calendar.changeView(this.props.view),e.has("theme")&&this._calendar.setOption("themeSystem",this.props.theme),e.has("height")&&this._calendar.setOption("height",this.props.height),e.has("aspectRatio")&&this._calendar.setOption("aspectRatio",this.props.aspectRatio),e.has("hideNonCurrentDates")&&this._calendar.setOption("showNonCurrentDates",!this.props.hideNonCurrentDates),e.has("selectable")&&this._calendar.setOption("selectable",this.props.selectable),e.has("editable")&&this._calendar.setOption("editable",this.props.editable),e.has("longPressDelay")&&this._calendar.setOption("longPressDelay",this.props.longPressDelay),e.has("eventOrder")&&this._calendar.setOption("eventOrder",this.props.eventOrder),e.has("noEventOverlap")&&this._calendar.setOption("eventOverlap",!this.props.noEventOverlap),e.has("businessHours")&&this._calendar.setOption("businessHours","string"==typeof this.props.businessHours?"false"!=this.props.businessHours:this.props.businessHours),e.has("eventLimit")&&this._calendar.setOption("dayMaxEventRows",this.props.eventLimit),e.has("nowIndicator")&&this._calendar.setOption("nowIndicator",this.props.nowIndicator),e.has("viewsOptions")&&this._calendar.setOption("views",this.props.viewsOptions),e.has("views")&&this._calendar.setOption("headerToolbar",{start:"today prev,next",center:"title",end:this.props.views.toString()})}))},destroy(){this._calendar&&this._calendar.destroy()},$parseAttributes(e){dmx.BaseComponent.prototype.$parseAttributes.call(this,e),this._businessHours={},dmx.dom.getAttributes(e).forEach((e=>{"business-hours"==e.name&&this.$watch(e.value,(t=>{if(null!=t){const s=Object.keys(e.modifiers)[0];this._businessHours[s]=t,this.props.businessHours=Object.values(this._businessHours)}}))}));const t={day:"day",week:"week","day-grid":"dayGrid","day-grid-month":"dayGridMonth","day-grid-week":"dayGridWeek","day-grid-day":"dayGridDay","time-grid":"timeGrid","time-grid-week":"timeGridWeek","time-grid-day":"timeGridDay",list:"list","list-day":"listDay","list-week":"listWeek","list-month":"listMonth","list-year":"listYear","multi-month":"multiMonth","multi-month-year":"multiMonthYear"};for(const s of e.attributes){if(s.name.startsWith("views-options")){const e=t[s.name.slice(14)];e&&this.$watch(s.value,(t=>{null!=t&&(this.props.viewsOptions={...this.props.viewsOptions,[e]:t})}))}"constraint.business-hours"==s.name&&(this.props.selectConstraint="businessHours"),"constraint.group"==s.name&&(this.props.selectConstraint=s.value),"dmx-bind:constraint"==s.name&&this.$watch(s.value,(e=>{null!=e&&(this.props.selectConstraint=e)})),"select-constraint.business-hours"==s.name&&(this.props.selectConstraint="businessHours"),"select-constraint.group"==s.name&&(this.props.selectConstraint=s.value),"event-constraint.business-hours"==s.name&&(this.props.eventConstraint="businessHours"),"event-constraint.group"==s.name&&(this.props.eventConstraint=s.value)}},_getEventData:e=>({id:e.id,title:e.title,start:e.startStr,end:e.endStr,allDay:e.allDay,extendedProps:e.extendedProps}),_parseDate(e){const t="UTC"===this.props.timezone,s=e[t?"getUTCFullYear":"getFullYear"](),n=e[t?"getUTCMonth":"getMonth"]()+1,i=e[t?"getUTCDate":"getDate"]();return`${s}-${n<10?"0":""}${n}-${i<10?"0":""}${i}T00:00:00${t?"Z":""}`},_datesSet(e){this.set({title:e.view.title,activeStart:this._parseDate(e.view.activeStart),activeEnd:this._parseDate(e.view.activeEnd),currentStart:this._parseDate(e.view.currentStart),currentEnd:this._parseDate(e.view.currentEnd)})},_dateClick(e){!this.dispatchEvent("dateclick",e.jsEvent,{date:e.dateStr,allDay:e.allDay})||e.jsEvent.preventDefault()},_eventClick(e){const t=!this.dispatchEvent("eventclick",e.jsEvent,{event:this._getEventData(e.event)});if(e.event.source)for(const t of this.children)t instanceof dmx.Component("calendar-source")&&t.name==e.event.source.id&&t.dispatchEvent("eventclick",e.jsEvent,{event:this._getEventData(e.event)});t||e.jsEvent.preventDefault()},_eventMouseEnter(e){if(this.dispatchEvent("eventmouseenter",e.jsEvent,{event:this._getEventData(e.event)}),e.event.source)for(const t of this.children)t instanceof dmx.Component("calendar-source")&&t.name==e.event.source.id&&t.dispatchEvent("eventmouseenter",e.jsEvent,{event:this._getEventData(e.event)})},_eventMouseLeave(e){if(this.dispatchEvent("eventmouseleave",e.jsEvent,{event:this._getEventData(e.event)}),e.event.source)for(const t of this.children)t instanceof dmx.Component("calendar-source")&&t.name==e.event.source.id&&t.dispatchEvent("eventmouseleave",e.jsEvent,{event:this._getEventData(e.event)})},_eventDrop(e){if(this.dispatchEvent("eventdrop",e.jsEvent,{event:this._getEventData(e.event),oldEvent:this._getEventData(e.oldEvent)}),e.event.source)for(const t of this.children)t instanceof dmx.Component("calendar-source")&&t.name==e.event.source.id&&t.dispatchEvent("eventdrop",e.jsEvent,{event:this._getEventData(e.event)})},_eventResize(e){if(this.dispatchEvent("eventresize",e.jsEvent,{event:this._getEventData(e.event),oldEvent:this._getEventData(e.oldEvent)}),e.event.source)for(const t of this.children)t instanceof dmx.Component("calendar-source")&&t.name==e.event.source.id&&t.dispatchEvent("eventresize",e.jsEvent,{event:this._getEventData(e.event)})},_eventDidMount(e){if(this.props.bsTooltip&&window.bootstrap){const t=dmx.DataScope({event:this._getEventData(e.event)},this),s={placement:dmx.parse(this.props.bsTooltipPlacement,t),title:dmx.parse(this.props.bsTooltipTitle,t),html:dmx.parse(this.props.bsTooltipHtml,t)};bootstrap.Tooltip.VERSION.startsWith("4.")?$(e.el).tooltip(s):new bootstrap.Tooltip(e.el,s)}},_eventWillUnmount(e){if(this.props.bsTooltip&&window.bootstrap)if(bootstrap.Tooltip.VERSION.startsWith("4."))$(e.el).tooltip("dispose");else{const t=bootstrap.Tooltip.getInstance(e.el);t&&t.dispose()}},_select(e){!this.dispatchEvent("select",e.jsEvent,{start:e.startStr,end:e.endStr,allDay:e.allDay})||e.jsEvent.preventDefault()}}),dmx.Component("calendar-source-base",{initialData:{id:null,events:[]},attributes:{color:{type:String,default:void 0},backgroundColor:{type:String,default:void 0},borderColor:{type:String,default:void 0},textColor:{type:String,default:void 0},className:{type:String,default:void 0},editable:{type:Boolean,default:void 0},overlap:{type:Boolean,default:void 0},constraint:{type:[String,Object],default:void 0},display:{type:String,default:void 0},config:{type:Object,default:{}}},methods:{refetch(){this._refetch()}},events:{eventclick:MouseEvent,eventmouseenter:MouseEvent,eventmouseleave:MouseEvent,eventdrop:Event,eventresize:Event},init(){this._calendar=this.parent._calendar,this.set("id",this.name)},_baseProps(){const e={};return null!=this.props.color&&(e.color=this.props.color),null!=this.props.backgroundColor&&(e.backgroundColor=this.props.backgroundColor),null!=this.props.borderColor&&(e.borderColor=this.props.borderColor),null!=this.props.textColor&&(e.textColor=this.props.textColor),null!=this.props.className&&(e.className=this.props.className),null!=this.props.editable&&(e.editable=this.props.editable),null!=this.props.overlap&&(e.overlap=this.props.overlap),null!=this.props.constraint&&(e.constraint=this.props.constraint),null!=this.props.display&&(e.display=this.props.display),e},_refetch(){this._calendar.getEventSourceById(this.name).refetch()}}),dmx.Component("calendar-source",{extends:"calendar-source-base",attributes:{events:{type:Array,default:[]},eventId:{type:String,default:"id"},eventTitle:{type:String,default:"title"},eventUrl:{type:String,default:"url"},eventStart:{type:String,default:"start"},eventEnd:{type:String,default:"end"},eventAllDay:{type:String,default:"allDay"},eventDaysOfWeek:{type:String,default:"daysOfWeek"},eventStartTime:{type:String,default:"startTime"},eventEndTime:{type:String,default:"endTime"},eventStartRecur:{type:String,default:"startRecur"},eventEndRecur:{type:String,default:"endRecur"},eventGroupId:{type:String,default:"groupId"},eventDisplay:{type:String,default:"display"},eventColor:{type:String,default:"color"},eventBackgroundColor:{type:String,default:"backgroundColor"},eventBorderColor:{type:String,default:"borderColor"},eventTextColor:{type:String,default:"textColor"},eventClassName:{type:String,default:"className"},eventEditable:{type:String,default:"editable"},eventOverlap:{type:String,default:"overlap"},eventConstraint:{type:[String,Object],default:"constraint"},eventExtendedProps:{type:String,default:"$value"}},render(e){this.$parse(),this._calendar.addEventSource({id:this.name,events:this._parseEvents.bind(this),...this._baseProps(),...this.props.config})},performUpdate(e){this._refetch()},destroy(){this._calendar.getEventSourceById(this.name).remove()},_parseEvents(e,t,s){this._events=[],Array.isArray(this.props.events)&&dmx.repeatItems(this.props.events).forEach((e=>{const t={},s=dmx.DataScope(e,this);for(const e in this.props){if("events"==e||!e.startsWith("event"))continue;const n=dmx.parse(this.props[e],s);null!=n&&(t[e.slice(5,6).toLowerCase()+e.slice(6)]=n)}this._events.push(t)})),this.children.forEach((e=>{if(e instanceof dmx.Component("calendar-event")){const t={id:e.name};for(const s in e.props)e.props.hasOwnProperty(s)&&"config"!=s&&null!=e.props[s]&&(t[s]=e.props[s]);this._events.push({...t,...e.props.config})}})),t(this._events),this.set("events",this._events)}}),dmx.Component("calendar-source-google",{extends:"calendar-source-base",attributes:{googleCalendarApiKey:{type:String,default:void 0},googleCalendarId:{type:String,default:void 0}},events:{success:Event,failure:Event},render(e){this.$parse(),this._calendar.addEventSource({id:this.name,success:this.dispatchEvent.bind(this,"success"),failure:this.dispatchEvent.bind(this,"failure"),...this._baseProps(),...this.props.config})},destroy(){this._calendar.getEventSourceById(this.name).remove()}}),dmx.Component("calendar-event",{attributes:{title:{type:String,default:void 0},url:{type:String,default:void 0},start:{type:String,default:void 0},end:{type:String,default:void 0},allDay:{type:Boolean,default:!1},daysOfWeek:{type:Array,default:void 0},startTime:{type:String,default:void 0},endTime:{type:String,default:void 0},startRecur:{type:String,default:void 0},endRecur:{type:String,default:void 0},groupId:{type:String,default:void 0},display:{type:String,default:void 0},editable:{type:Boolean,default:void 0},color:{type:String,default:void 0},backgroundColor:{type:String,default:void 0},borderColor:{type:String,default:void 0},textColor:{type:String,default:void 0},className:{type:String,default:void 0},constraint:{type:[String,Object],default:void 0},overlap:{type:Boolean,default:void 0},extendedProps:{type:Object,default:void 0},config:{type:Object,default:{}}},performUpdate(e){this.parent._refetch&&this.parent._refetch()},$parseAttributes(e){dmx.BaseComponent.prototype.$parseAttributes.call(this,e);for(const t of e.attributes)"constraint.business-hours"==t.name&&(this.props.constraint="businessHours"),"constraint.group"==t.name&&(this.props.constraint=t.value)}});
//# sourceMappingURL=dmxCalendar.js.map
